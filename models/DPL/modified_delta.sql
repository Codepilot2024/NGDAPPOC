{{ config(
    schema=var('PS_DB_IS_ORA_SCM_v0001.$ORA_SCM_SAC') ,
    materialized='table',
    pre_hook='CALL {{ var("PS_DB_IS_ORA_SCM_v0001.$ORA_SCM_SAC") }}.proc_truncate_table(\'{{ var("PS_DB_IS_ORA_SCM_v0001.$ORA_SCM_SAC") }}\',\'{{this}}\');'
) }}

--    

WITH
------------source------------
SOURCE AS (
  SELECT
    IP_ID,
    IP_ID AS SAC_IP_ID,
    IP_SUP_KEY AS SAC_IP_SUP_KEY,
    MSTR_SRC_STM_CD AS SAC_MSTR_SRC_STM_CD,
    ENT_TP_CD AS SAC_ENT_TP_CD,
    MSTR_SRC_STM_KEY AS SAC_MSTR_SRC_STM_KEY,
    SRC_STM_CD AS SAC_SRC_STM_CD,
    VLD_FROM_TMS AS SAC_VLD_FROM_TMS,
    DEL_IN_SRC_STM_IND AS SAC_DEL_IN_SRC_STM_IND,
    SRC_INSTN_ISRT_ID AS SAC_SRC_INSTN_ISRT_ID,
    TC_OBJ_INSTANCE_KEY_1 AS SAC_TC_OBJ_INSTANCE_KEY_1,
    TC_OBJ_INSTANCE_KEY_2 AS SAC_TC_OBJ_INSTANCE_KEY_2,
    TC_OBJ_INSTANCE_KEY_3 AS SAC_TC_OBJ_INSTANCE_KEY_3,
    TC_DATA_TYPE_CHAR_IND_CHANGED_NAME AS SAC_TC_DATA_TYPE_CHAR_IND_CHANGED_NAME,
    TC_DATA_TYPE_NCHAR_CD AS SAC_TC_DATA_TYPE_NCHAR_CD,
    TC_DATA_TYPE_VARCHAR_NM AS SAC_TC_DATA_TYPE_VARCHAR_NM,
    TC_DATA_TYPE_NVARCHAR_DSC AS SAC_TC_DATA_TYPE_NVARCHAR_DSC,
    TC_DATA_TYPE_INTEGER_RTO AS SAC_TC_DATA_TYPE_INTEGER_RTO,
    TC_DATA_TYPE_SMALLINT_NBR AS SAC_TC_DATA_TYPE_SMALLINT_NBR,
    TC_DATA_TYPE_BIGINT_PCT AS SAC_TC_DATA_TYPE_BIGINT_PCT,
    TC_DATA_TYPE_DECIMAL_AMT AS SAC_TC_DATA_TYPE_DECIMAL_AMT,
    TC_DATA_TYPE_BOOLEAN_F AS SAC_TC_DATA_TYPE_BOOLEAN_F,
    TC_DATA_TYPE_TIMESTAMP_TMS AS SAC_TC_DATA_TYPE_TIMESTAMP_TMS,
    TC_DATA_TYPE_DATE_DT AS SAC_TC_DATA_TYPE_DATE_DT,
    TC_DATA_TYPE_TIME_TM AS SAC_TC_DATA_TYPE_TIME_TM,
    TC_FK_CL_1_KEY_1 AS SAC_TC_FK_CL_1_KEY_1,
    TC_FK_CL_1_KEY_2 AS SAC_TC_FK_CL_1_KEY_2,
    TC_FK_CL_2_KEY AS SAC_TC_FK_CL_2_KEY,
    TC_FK_EV_I_KEY AS SAC_TC_FK_EV_I_KEY,
    TC_EDC_ATTR_SPLIT AS SAC_TC_EDC_ATTR_SPLIT,
    TC_EDC_ATTR_CONVERGE_1 AS SAC_TC_EDC_ATTR_CONVERGE_1,
    TC_EDC_ATTR_CONVERGE_2 AS SAC_TC_EDC_ATTR_CONVERGE_2,
    TC_FK_1_CL_ID AS SAC_TC_FK_1_CL_ID,
    TC_FK_2_CL_ID AS SAC_TC_FK_2_CL_ID,
    TC_FK_EV_I_ID AS SAC_TC_FK_EV_I_ID,
    TC_SPLIT_ATTR_1_EDC AS SAC_TC_SPLIT_ATTR_1_EDC,
    TC_SPLIT_ATTR_2_EDC AS SAC_TC_SPLIT_ATTR_2_EDC,
    TC_CONVERGE_ATTR_EDC AS SAC_TC_CONVERGE_ATTR_EDC,
    HASH_VAL AS SAC_HASH_VAL
  FROM (
    SELECT
      R1.IP_ID,
      S.IP_SUP_KEY,
      S.MSTR_SRC_STM_CD,
      S.ENT_TP_CD,
      S.MSTR_SRC_STM_KEY,
      S.SRC_STM_CD,
      S.VLD_FROM_TMS,
      S.DEL_IN_SRC_STM_IND,
      S.SRC_INSTN_ISRT_ID,
      S.TC_OBJ_INSTANCE_KEY_1,
      S.TC_OBJ_INSTANCE_KEY_2,
      S.TC_OBJ_INSTANCE_KEY_3,
      S.TC_DATA_TYPE_CHAR_IND_CHANGED_NAME,
      S.TC_DATA_TYPE_NCHAR_CD,
      S.TC_DATA_TYPE_VARCHAR_NM,
      S.TC_DATA_TYPE_NVARCHAR_DSC,
      S.TC_DATA_TYPE_INTEGER_RTO,
      S.TC_DATA_TYPE_SMALLINT_NBR,
      S.TC_DATA_TYPE_BIGINT_PCT,
      S.TC_DATA_TYPE_DECIMAL_AMT,
      S.TC_DATA_TYPE_BOOLEAN_F,
      S.TC_DATA_TYPE_TIMESTAMP_TMS,
      S.TC_DATA_TYPE_DATE_DT,
      S.TC_DATA_TYPE_TIME_TM AS TC_DATA_TYPE_TIME_TM,
      S.TC_FK_CL_1_KEY_1,
      S.TC_FK_CL_1_KEY_2,
      S.TC_FK_CL_2_KEY,
      S.TC_FK_EV_I_KEY,
      S.TC_EDC_ATTR_SPLIT,
      S.TC_EDC_ATTR_CONVERGE_1,
      S.TC_EDC_ATTR_CONVERGE_2,
      LK_TC_FK_1_CL_SUP_KEY.CL_ID AS TC_FK_1_CL_ID,
      LK_TC_FK_2_CL_SUP_KEY.CL_ID AS TC_FK_2_CL_ID,
      LK_TC_FK_EV_I_SUP_KEY.EV_TCI_DELTA_C_I_ID AS TC_FK_EV_I_ID,
      S.TC_SPLIT_ATTR_1_EDC,
      S.TC_SPLIT_ATTR_2_EDC,
      S.TC_CONVERGE_ATTR_EDC,
      --------hash calculation----------------
      TO_HEX(SHA256( IFNULL( S.IP_SUP_KEY, '  ' ) ||';'|| IFNULL( S.TC_OBJ_INSTANCE_KEY_1, '  ' ) ||';'|| IFNULL( S.TC_OBJ_INSTANCE_KEY_2, '  ' ) ||';'|| IFNULL( S.TC_OBJ_INSTANCE_KEY_3, '  ' ) ||';'|| IFNULL( S.TC_DATA_TYPE_CHAR_IND_CHANGED_NAME, '  ' ) ||';'|| IFNULL( S.TC_DATA_TYPE_NCHAR_CD, '  ' ) ||';'|| IFNULL( S.TC_DATA_TYPE_VARCHAR_NM, '  ' ) ||';'|| IFNULL( S.TC_DATA_TYPE_NVARCHAR_DSC, '  ' ) ||';'|| IFNULL( S.TC_DATA_TYPE_INTEGER_RTO,0 ) ||';'|| IFNULL( S.TC_DATA_TYPE_SMALLINT_NBR,0) ||';'|| IFNULL( S.TC_DATA_TYPE_BIGINT_PCT,0) ||';'|| IFNULL( S.TC_DATA_TYPE_DECIMAL_AMT,0 ) ||';'|| IFNULL( S.TC_DATA_TYPE_BOOLEAN_F,0 ) ||';'|| IFNULL( S.TC_DATA_TYPE_TIMESTAMP_TMS,CURRENT_DATETIME ) ||';'|| IFNULL( S.TC_DATA_TYPE_DATE_DT,CURRENT_DATE ) ||';'|| IFNULL(S.TC_DATA_TYPE_TIME_TM, '  ' ) ||';'|| IFNULL( S.TC_FK_CL_1_KEY_1, '  ' ) ||';'|| IFNULL( S.TC_FK_CL_1_KEY_2, '  ' ) ||';'|| IFNULL( S.TC_FK_CL_2_KEY, '  ' ) ||';'|| IFNULL( S.TC_FK_EV_I_KEY, '  ' ) ||';'|| IFNULL( S.TC_EDC_ATTR_SPLIT, '  ' ) ||';'|| IFNULL( S.TC_EDC_ATTR_CONVERGE_1, '  ' ) ||';'|| IFNULL( S.TC_EDC_ATTR_CONVERGE_2, '  ' ) ||';'|| IFNULL( S.TC_SPLIT_ATTR_1_EDC, '  ' ) ||';'|| IFNULL( S.TC_SPLIT_ATTR_2_EDC, '  ' ) ||';'|| IFNULL( S.TC_CONVERGE_ATTR_EDC, '  ' ) ||';'|| IFNULL( LK_TC_FK_1_CL_SUP_KEY.CL_ID, '  ' ) ||';'|| IFNULL( LK_TC_FK_2_CL_SUP_KEY.CL_ID,'  ' ) ||';'|| IFNULL( LK_TC_FK_EV_I_SUP_KEY.EV_TCI_DELTA_C_I_ID,'  ') )) AS HASH_VAL
    FROM
    ---------joins------------------------
      {{ ref('PMS_IS_SAC_DPL_SS_DPL_IP_TCV_FULL_CUD_V') }} S
    INNER JOIN {{ source('pms_cds','PMS_IS_CDS_IP_K') }} R1 ON (S.IP_SUP_KEY = R1.IP_SUP_KEY) AND R1.ENT_TP_CD='IP_TCV_FULL_CUD'
    INNER JOIN {{ source('pms_cds','PMS_IS_CDS_CL_K') }} LK_TC_FK_1_CL_SUP_KEY ON (S.TC_FK_1_CL_SUP_KEY = LK_TC_FK_1_CL_SUP_KEY.CL_SUP_KEY) AND LK_TC_FK_1_CL_SUP_KEY.ENT_TP_CD='CL_CV'
    LEFT OUTER JOIN {{ source('pms_cds','PMS_IS_CDS_CL_K') }} LK_TC_FK_2_CL_SUP_KEY ON (S.TC_FK_2_CL_SUP_KEY = LK_TC_FK_2_CL_SUP_KEY.CL_SUP_KEY)AND LK_TC_FK_2_CL_SUP_KEY.ENT_TP_CD='CL_CV'
    INNER JOIN {{ source('pms_cds','PMS_IS_CDS_SS_DPL_EV_TCI_DELTA_C_I') }} LK_TC_FK_EV_I_SUP_KEY ON (S.TC_FK_EV_I_SUP_KEY = LK_TC_FK_EV_I_SUP_KEY.EV_TCI_DELTA_C_I_SUP_KEY) AND LK_TC_FK_EV_I_SUP_KEY.ENT_TP_CD='EV_TCI_DELTA_C_I' ))
-------target----------------------
,TGT AS (
  SELECT
    IP_TCV_FULL_CUD_V_ID AS CDS_IP_TCV_FULL_CUD_V_ID,
    IP_ID AS IP_ID,
    IP_ID AS CDS_IP_ID,
    IP_SUP_KEY AS CDS_IP_SUP_KEY,
    MSTR_SRC_STM_CD AS CDS_MSTR_SRC_STM_CD,
    ENT_TP_CD AS CDS_ENT_TP_CD,
    MSTR_SRC_STM_KEY AS CDS_MSTR_SRC_STM_KEY,
    SRC_STM_CD AS CDS_SRC_STM_CD,
    HASH_VAL AS CDS_HASH_VAL,
    VLD_FROM_TMS AS CDS_VLD_FROM_TMS,
    DEL_IN_SRC_STM_IND AS CDS_DEL_IN_SRC_STM_IND,
    SRC_INSTN_ISRT_ID AS CDS_SRC_INSTN_ISRT_ID,
    PCS_ISRT_ID AS CDS_PCS_ISRT_ID,
    ISRT_TMS AS CDS_ISRT_TMS,
    IFNULL(TC_OBJ_INSTANCE_KEY_1,'') AS CDS_TC_OBJ_INSTANCE_KEY_1,
    IFNULL(TC_OBJ_INSTANCE_KEY_2,'') AS CDS_TC_OBJ_INSTANCE_KEY_2,
    IFNULL(TC_OBJ_INSTANCE_KEY_3,'') AS CDS_TC_OBJ_INSTANCE_KEY_3,
    TC_DATA_TYPE_CHAR_IND_CHANGED_NAME AS CDS_TC_DATA_TYPE_CHAR_IND_CHANGED_NAME,
    TC_DATA_TYPE_NCHAR_CD AS CDS_TC_DATA_TYPE_NCHAR_CD,
    TC_DATA_TYPE_VARCHAR_NM AS CDS_TC_DATA_TYPE_VARCHAR_NM,
    TC_DATA_TYPE_NVARCHAR_DSC AS CDS_TC_DATA_TYPE_NVARCHAR_DSC,
    TC_DATA_TYPE_INTEGER_RTO AS CDS_TC_DATA_TYPE_INTEGER_RTO,
    TC_DATA_TYPE_SMALLINT_NBR AS CDS_TC_DATA_TYPE_SMALLINT_NBR,
    TC_DATA_TYPE_BIGINT_PCT AS CDS_TC_DATA_TYPE_BIGINT_PCT,
    TC_DATA_TYPE_DECIMAL_AMT AS CDS_TC_DATA_TYPE_DECIMAL_AMT,
    TC_DATA_TYPE_BOOLEAN_F AS CDS_TC_DATA_TYPE_BOOLEAN_F,
    TC_DATA_TYPE_TIMESTAMP_TMS AS CDS_TC_DATA_TYPE_TIMESTAMP_TMS,
    TC_DATA_TYPE_DATE_DT AS CDS_TC_DATA_TYPE_DATE_DT,
    (TC_DATA_TYPE_TIME_TM ) AS CDS_TC_DATA_TYPE_TIME_TM,
    IFNULL(TC_FK_CL_1_KEY_1,'') AS CDS_TC_FK_CL_1_KEY_1,
    IFNULL(TC_FK_CL_1_KEY_2,'') AS CDS_TC_FK_CL_1_KEY_2,
    IFNULL(TC_FK_CL_2_KEY,'') AS CDS_TC_FK_CL_2_KEY,
    TC_FK_EV_I_KEY AS CDS_TC_FK_EV_I_KEY,
    IFNULL(TC_EDC_ATTR_SPLIT,'') AS CDS_TC_EDC_ATTR_SPLIT,
    TC_EDC_ATTR_CONVERGE_1 AS CDS_TC_EDC_ATTR_CONVERGE_1,
    TC_EDC_ATTR_CONVERGE_2 AS CDS_TC_EDC_ATTR_CONVERGE_2,
    IFNULL(TC_FK_1_CL_ID,'') AS CDS_TC_FK_1_CL_ID,
    TC_FK_2_CL_ID AS CDS_TC_FK_2_CL_ID,
    IFNULL(TC_FK_EV_I_ID,'') AS CDS_TC_FK_EV_I_ID,
    IFNULL(TC_SPLIT_ATTR_1_EDC,'') AS CDS_TC_SPLIT_ATTR_1_EDC,
    IFNULL(TC_SPLIT_ATTR_2_EDC,'') AS CDS_TC_SPLIT_ATTR_2_EDC,
    TC_CONVERGE_ATTR_EDC AS CDS_TC_CONVERGE_ATTR_EDC
  FROM
    {{ source('pms_cds','PMS_IS_CDS_SS_DPL_IP_TCV_FULL_CUD_V') }} BALOP_5
  WHERE
  ----filter active records---------
    VLD_TO_TMS = CAST('9999-12-31 00:00:00' AS DATETIME) )

--------------delta detection----------------------------
SELECT
    CASE
      WHEN (CASE
        WHEN CDS_IP_ID IS NULL
      AND SAC_IP_ID IS NULL THEN ('1')
        ELSE ('0')
    END
      = '1') THEN (GENERATE_UUID()) ELSE(CDS_IP_TCV_FULL_CUD_V_ID)
  END
    AS IP_TCV_FULL_CUD_V_ID,
    SAC_IP_ID AS IP_ID,
    SAC_IP_SUP_KEY AS IP_SUP_KEY,
    SAC_MSTR_SRC_STM_CD AS MSTR_SRC_STM_CD,
    SAC_ENT_TP_CD AS ENT_TP_CD,
    SAC_MSTR_SRC_STM_KEY AS MSTR_SRC_STM_KEY,
    SAC_SRC_STM_CD AS SRC_STM_CD,
    SAC_HASH_VAL AS HASH_VAL,
    {{ parse_datetime(var("pm_pcs_period")) }} AS VLD_FROM_TMS,
    SAC_DEL_IN_SRC_STM_IND AS DEL_IN_SRC_STM_IND,
    SAC_SRC_INSTN_ISRT_ID AS SRC_INSTN_ISRT_ID,
    {{ var("pm_pcs_id") }} AS PCS_ISRT_ID,
    CURRENT_DATETIME AS ISRT_TMS,
    SAC_TC_OBJ_INSTANCE_KEY_1 AS TC_OBJ_INSTANCE_KEY_1,
    SAC_TC_OBJ_INSTANCE_KEY_2 AS TC_OBJ_INSTANCE_KEY_2,
    SAC_TC_OBJ_INSTANCE_KEY_3 AS TC_OBJ_INSTANCE_KEY_3,
    SAC_TC_DATA_TYPE_CHAR_IND_CHANGED_NAME AS TC_DATA_TYPE_CHAR_IND_CHANGED_NAME,
    SAC_TC_DATA_TYPE_NCHAR_CD AS TC_DATA_TYPE_NCHAR_CD,
    SAC_TC_DATA_TYPE_VARCHAR_NM AS TC_DATA_TYPE_VARCHAR_NM,
    SAC_TC_DATA_TYPE_NVARCHAR_DSC AS TC_DATA_TYPE_NVARCHAR_DSC,
    SAC_TC_DATA_TYPE_INTEGER_RTO AS TC_DATA_TYPE_INTEGER_RTO,
    SAC_TC_DATA_TYPE_SMALLINT_NBR AS TC_DATA_TYPE_SMALLINT_NBR,
    SAC_TC_DATA_TYPE_BIGINT_PCT AS TC_DATA_TYPE_BIGINT_PCT,
    SAC_TC_DATA_TYPE_DECIMAL_AMT AS TC_DATA_TYPE_DECIMAL_AMT,
    SAC_TC_DATA_TYPE_BOOLEAN_F AS TC_DATA_TYPE_BOOLEAN_F,
    SAC_TC_DATA_TYPE_TIMESTAMP_TMS AS TC_DATA_TYPE_TIMESTAMP_TMS,
    SAC_TC_DATA_TYPE_DATE_DT AS TC_DATA_TYPE_DATE_DT,
    SAC_TC_DATA_TYPE_TIME_TM AS TC_DATA_TYPE_TIME_TM,
    SAC_TC_FK_CL_1_KEY_1 AS TC_FK_CL_1_KEY_1,
    SAC_TC_FK_CL_1_KEY_2 AS TC_FK_CL_1_KEY_2,
    SAC_TC_FK_CL_2_KEY AS TC_FK_CL_2_KEY,
    SAC_TC_FK_EV_I_KEY AS TC_FK_EV_I_KEY,
    SAC_TC_EDC_ATTR_SPLIT AS TC_EDC_ATTR_SPLIT,
    SAC_TC_EDC_ATTR_CONVERGE_1 AS TC_EDC_ATTR_CONVERGE_1,
    SAC_TC_EDC_ATTR_CONVERGE_2 AS TC_EDC_ATTR_CONVERGE_2,
    SAC_TC_FK_1_CL_ID AS TC_FK_1_CL_ID,
    SAC_TC_FK_2_CL_ID AS TC_FK_2_CL_ID,
    SAC_TC_FK_EV_I_ID AS TC_FK_EV_I_ID,
    SAC_TC_SPLIT_ATTR_1_EDC AS TC_SPLIT_ATTR_1_EDC,
    SAC_TC_SPLIT_ATTR_2_EDC AS TC_SPLIT_ATTR_2_EDC,
    SAC_TC_CONVERGE_ATTR_EDC AS TC_CONVERGE_ATTR_EDC
  FROM (
    SELECT
      BALOP_4.*,
      BALOP_7.CDS_IP_ID,
      BALOP_7.CDS_IP_TCV_FULL_CUD_V_ID,
      CASE WHEN ((BALOP_7.CDS_IP_ID IS NULL ) AND (BALOP_4.SAC_IP_ID IS NOT NULL )) THEN ('1') ELSE ('0') END AS INS,
      CASE WHEN ((BALOP_7.CDS_IP_ID = BALOP_4.SAC_IP_ID) AND (BALOP_4.SAC_HASH_VAL <> BALOP_7.CDS_HASH_VAL)) THEN ('1') ELSE ('0') END AS UPD,
      CASE WHEN ((BALOP_7.CDS_IP_ID = BALOP_4.SAC_IP_ID) AND (BALOP_7.CDS_DEL_IN_SRC_STM_IND = 'Y')) THEN ('1') ELSE ('0') END AS DEL
    FROM (
      SELECT
        *
      FROM
        SOURCE ) BALOP_4
    LEFT OUTER JOIN (
      SELECT
        *
      FROM
        TGT ) BALOP_7
    ON
      (BALOP_4.IP_ID = BALOP_7.IP_ID)) BALOP_8
  WHERE
    INS ='1'
    OR UPD='1'
    OR DEL='1' 
UNION ALL (
------------------soft delete-------------------------------
  SELECT

    CDS_IP_TCV_FULL_CUD_V_ID AS IP_TCV_FULL_CUD_V_ID,
    CDS_IP_ID AS IP_ID,
    CDS_IP_SUP_KEY AS IP_SUP_KEY,
    CDS_MSTR_SRC_STM_CD AS MSTR_SRC_STM_CD,
    CDS_ENT_TP_CD AS ENT_TP_CD,
    CDS_MSTR_SRC_STM_KEY AS MSTR_SRC_STM_KEY,
    CDS_SRC_STM_CD AS SRC_STM_CD,
    CDS_HASH_VAL AS HASH_VAL,
    {{ parse_datetime(var("pm_pcs_period")) }} AS VLD_FROM_TMS,
    'Y' AS DEL_IN_SRC_STM_IND,
    CDS_SRC_INSTN_ISRT_ID AS SRC_INSTN_ISRT_ID,
    {{ var("pm_pcs_id") }} AS PCS_ISRT_ID,
    CURRENT_DATETIME AS ISRT_TMS,
    CDS_TC_OBJ_INSTANCE_KEY_1 AS TC_OBJ_INSTANCE_KEY_1,
    CDS_TC_OBJ_INSTANCE_KEY_2 AS TC_OBJ_INSTANCE_KEY_2,
    CDS_TC_OBJ_INSTANCE_KEY_3 AS TC_OBJ_INSTANCE_KEY_3,
    CDS_TC_DATA_TYPE_CHAR_IND_CHANGED_NAME AS TC_DATA_TYPE_CHAR_IND_CHANGED_NAME,
    CDS_TC_DATA_TYPE_NCHAR_CD AS TC_DATA_TYPE_NCHAR_CD,
    CDS_TC_DATA_TYPE_VARCHAR_NM AS TC_DATA_TYPE_VARCHAR_NM,
    CDS_TC_DATA_TYPE_NVARCHAR_DSC AS TC_DATA_TYPE_NVARCHAR_DSC,
    CDS_TC_DATA_TYPE_INTEGER_RTO AS TC_DATA_TYPE_INTEGER_RTO,
    CDS_TC_DATA_TYPE_SMALLINT_NBR AS TC_DATA_TYPE_SMALLINT_NBR,
    CDS_TC_DATA_TYPE_BIGINT_PCT AS TC_DATA_TYPE_BIGINT_PCT,
    CDS_TC_DATA_TYPE_DECIMAL_AMT AS TC_DATA_TYPE_DECIMAL_AMT,
    CDS_TC_DATA_TYPE_BOOLEAN_F AS TC_DATA_TYPE_BOOLEAN_F,
    CDS_TC_DATA_TYPE_TIMESTAMP_TMS AS TC_DATA_TYPE_TIMESTAMP_TMS,
    CDS_TC_DATA_TYPE_DATE_DT AS TC_DATA_TYPE_DATE_DT,
    CDS_TC_DATA_TYPE_TIME_TM AS TC_DATA_TYPE_TIME_TM,
    CDS_TC_FK_CL_1_KEY_1 AS TC_FK_CL_1_KEY_1,
    CDS_TC_FK_CL_1_KEY_2 AS TC_FK_CL_1_KEY_2,
    CDS_TC_FK_CL_2_KEY AS TC_FK_CL_2_KEY,
    CDS_TC_FK_EV_I_KEY AS TC_FK_EV_I_KEY,
    CDS_TC_EDC_ATTR_SPLIT AS TC_EDC_ATTR_SPLIT,
    CDS_TC_EDC_ATTR_CONVERGE_1 AS TC_EDC_ATTR_CONVERGE_1,
    CDS_TC_EDC_ATTR_CONVERGE_2 AS TC_EDC_ATTR_CONVERGE_2,
    CDS_TC_FK_1_CL_ID AS TC_FK_1_CL_ID,
    CDS_TC_FK_2_CL_ID AS TC_FK_2_CL_ID,
    CDS_TC_FK_EV_I_ID AS TC_FK_EV_I_ID,
    CDS_TC_SPLIT_ATTR_1_EDC AS TC_SPLIT_ATTR_1_EDC,
    CDS_TC_SPLIT_ATTR_2_EDC AS TC_SPLIT_ATTR_2_EDC,
    CDS_TC_CONVERGE_ATTR_EDC AS TC_CONVERGE_ATTR_EDC
  FROM (
    SELECT
      BALOP_14.*,
      CASE
        WHEN BALOP_11.SAC_IP_ID IS NULL AND BALOP_14.CDS_IP_ID IS NOT NULL AND (BALOP_14.CDS_DEL_IN_SRC_STM_IND = 'N') THEN ('1') ELSE ('0') END AS SDEL
    FROM (
      SELECT
        *
      FROM
        SOURCE D) BALOP_11
    RIGHT OUTER JOIN (
      SELECT
        *
      FROM
        TGT ) BALOP_14
    ON
      (BALOP_11.IP_ID = BALOP_14.IP_ID)) BALOP_15
  WHERE
    SDEL = '1')